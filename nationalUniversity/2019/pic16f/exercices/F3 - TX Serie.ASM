errorlevel -203, -205, -302
LIST P=16F887
#include <P16F887.inc>

;CONFIG
;NO->(DEBUG, LVP, CLK MONITOR, CLK SWITCHOVER, DAT PROTECT, PROG PROTECT, WATCHDOG)
;SI->(BROW-OUT RESET, PWR UP TIMER, MCLR)
;OSCILADOR->INTOSC MODO IO 
__CONFIG _CONFIG1, B'0010000011110100'

CBLOCK 0X20
	tx_buffer
	ancho
	X
ENDC

#define data_in PORTB,RB4
#define tx_control PORTD,RD0
#define tx_bus PORTD,RD1

ORG 0
GOTO setup
ORG 4 
;GOTO INT
ORG 5 
setup			CLRF PORTB				;INICIALIZA PUERTOS
				CLRF PORTD
				CLRF ancho
				BANKSEL OSCCON
				MOVLW B'00001010'		;LFINTOSC A f=31KHz ESTABLE -> Tcy=129us
				MOVWF OSCCON
				BANKSEL ANSELH
				CLRF ANSELH				;PORTB DIGITAL
				BANKSEL OPTION_REG
				BCF OPTION_REG,NOT_RBPU	;PULL UPS EN PORTB
				MOVLW 0X1F				;PULL UP SOLO EN (RB4-RB0)
				MOVWF WPUB
				MOVWF TRISB				;(RB3-RB0) INPUT EN LOGICA NEGADA, RB4 CTRL DE INGRESO
				BCF TRISD,TRISD0		;RD0 COMO CTRL DE LA TRANSMISION
				BCF TRISD,TRISD1		;RD1 COMO BUS DE TRANSMISION
				BCF TRISD,TRISD2		;RD2 COMO INDICADOR DE ESTATUS	
				BANKSEL X
				CLRF X					;VAR PARA RETARDO DE 10ms
				COMF X					;X=255 -> (256+1)3=771 INST -> 771*129us = 9,9ms
				
main			BTFSC data_in
				GOTO main
				CALL TX
				GOTO main

TX				BSF ancho,2				;ESTABLECE UN DATO DE 4 BITS
				COMF PORTB,W			;DATO A LOGICA POSITIVA
				MOVWF tx_buffer			
				MOVLW 0X0F				
				ANDWF tx_buffer,F		;CARGA Y LIMPIA EL BUFFER DE TRANSMISION
B1				BTFSS tx_buffer,0		;4 BIT SHIFT-REGISTER
				BCF tx_bus				;
				BTFSC tx_buffer,0		;
				BSF tx_bus				;
				CALL retxms				;ESTABILIZA DATO
				BSF tx_control			;INICIA TRANSMISION DE UN BIT
				CALL retxms				;MANTIENE EL DATO
				BCF tx_control			;TERMINA TRANSMISION
				CALL retxms				;
				BCF STATUS,C			;
				RRF tx_buffer,F			;
				DECFSZ ancho			;ENVIO COMPLETO?
				GOTO B1					;NO -> CONTINUAR
				BCF tx_bus				;SI -> LIMPIA EL BUS	
				RETURN
				
retxms			DECFSZ X				;RETARDO DE 10ms APROX
				GOTO $-1
				DECF X
				RETURN										
END						