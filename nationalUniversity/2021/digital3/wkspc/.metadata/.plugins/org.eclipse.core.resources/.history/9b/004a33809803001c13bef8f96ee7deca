/*
===============================================================================
 Name        : pract1.c
 Author      : $(author)
 Version     :
 Copyright   : $(copyright)
 Description : main definition
===============================================================================
*/

#ifdef __USE_CMSIS
#include "LPC17xx.h"
#endif

#include <cr_section_macros.h>

//TODO: insert other include files here

// Prototipos
char cfgGpio(char gpio,short int pin,char dir='o',char pullmode='x');

int main(void) {

	//core init
	SystemInit();

    // Force the counter to be placed into memory
    volatile static int i = 0 ;
    // Enter an infinite loop, just incrementing a counter
    while(1) {
        i++ ;
        // "Dummy" NOP to allow source level single
        // stepping of tight while() loop
        __asm volatile ("nop");
    }
    return 0 ;
}

/*
 * Configurar gpio
 */
char cfgGpio(char gpio,short int pin,char dir='o',char pullmode='x'){

	//Gpio modo digital i/o
	//1<<r --> bit r=1, 1+N<<r --> bit r, y N bits siguientes = 1
	LPC_PINCON->PINSEL1&=~(0b11<<(2*pin));

	//Configurar pullmode (default: ni pullup ni pulldown)
	//todo TOMANDO EL VALOR POR DEFAULT EN 0's
	LPC_PINCON->PINMODE1|=(0b10<<(2*pin));

	//Configurar direccion (default: salida)
	LPC_GPIO0->FIODIR|=(0b1<<(2*pin));

	return 1;
}

/*
 * Retornar valor del pin p del Gpio x (Gx.p)
 */
unsigned int getGpio(char gpio,char pin){
	LPC_GPIO0->FIOMASK
	return LPC_GPIO0->
}

/*
 * Setear valor del pin p del Gpio x (Gx.p)
 */
unsigned int setGpio(){

}
